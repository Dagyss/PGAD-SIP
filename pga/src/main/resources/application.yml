spring:
  application:
    name: pga
  web:
    resources:
      add-mappings: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${OKTA_OAUTH2_ISSUER}
          audiences:
            - ${OKTA_OAUTH2_AUDIENCE}
  datasource:
    url: jdbc:postgresql://pga-db:5432/pga #${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

meli:
  accessToken: ${MELI_ACCESS_TOKEN}

mercado:
  pago:
    url:
      base: https://api.mercadopago.com/v1/payments


application:
  client-origin-url: ${CLIENT_ORIGIN_URL}

server:
  error:
    whitelabel:
      enabled: false
  port: ${PORT}

auth0:
  domain: ${TESTAPP_AUTH0_DOMAIN}
  clientId: ${TESTAPP_AUTH0_CLIENT_ID}
  clientSecret: ${TESTAPP_AUTH0_CLIENT_SECRET}

okta:
  oauth2:
    issuer: ${OKTA_OAUTH2_ISSUER}
    audience: ${OKTA_OAUTH2_AUDIENCE}

logging:
  file:
    name: logs/app.log

gemini:
  apiKey: ${GEMINI_API_KEY}
